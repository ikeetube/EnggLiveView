    // public function dual_site($csvName){
    //     $data = array();
        
    //     // // Get messages from the session
    //     // if($this->session->userdata('success_msg')){
    //     //     $data['success_msg'] = $this->session->userdata('success_msg');
    //     //     $this->session->unset_userdata('success_msg');
    //     // }
    //     // if($this->session->userdata('error_msg')){
    //     //     $data['error_msg'] = $this->session->userdata('error_msg');
    //     //     $this->session->unset_userdata('error_msg');
    //     // }

    //     //Load CSVReader Library
    //     $this->load->library('CSVReader');
    //     // Get Test Limits
    //     $pds = $this->csvreader->parse_csv(FCPATH."ets_data/PDS/pds_june25.csv");

    //     // Get Reading
    //     $csvData = $this->csvreader->parse_csv(FCPATH."ets_data/data/".$csvName);
    //     $testReadings  = array();
    //     // echo '<pre>'; 
    //     //     print_r($csvData);
    //     // echo '<pre/>';
    //     $file['name'] = $csvName;

    //     if($pds==FALSE || $csvData==FALSE) {
    //         // $this->load->view('No_file', $file);
    //         echo 'Files does not exist: '.$csvName;
    //     }
    //     else {
    //         for($testNum=1; $testNum<count($pds);$testNum++){

    //             $testName[$testNum]   = $pds[$testNum]['Test Name'];
    //             $LSL[$testNum]        = $pds[$testNum]['LoLim'];
    //             $USL[$testNum]        = $pds[$testNum]['HiLim'];

    //             for($dataIndex=2; $dataIndex<=count($csvData);$dataIndex++){

    //                 //Get only Bin 1 data
    //                 if($csvData[$dataIndex]['Bin']==1)
    //                 {
    //                     switch($csvData[$dataIndex]['ID'])
    //                     {
    //                         case 0:
    //                             $testReadings_s1[$dataIndex]=$csvData[$dataIndex][$testNum-1];
    //                             break;
    //                         case 1:
    //                             $testReadings_s2[$dataIndex]=$csvData[$dataIndex][$testNum-1];
    //                             break;
    //                     }

    //                 }

    //             }

                
    //             //Site 1 Computations
    //             $mean_s1[$testNum]   = round(array_sum($testReadings_s1)/count($testReadings_s1),4);
    //             $stdDev_s1[$testNum] = round($this->getStdDev($testReadings_s1),4);
                
    //             if($stdDev_s1[$testNum]!=0){
    //                 $cp_s1[$testNum]     = round(($USL[$testNum]-$LSL[$testNum])/$stdDev_s1[$testNum],2);                
    //                 $cpkL_s1[$testNum]   = round(($mean_s1[$testNum]-$LSL[$testNum])/(3*$stdDev_s1[$testNum]),2);
    //                 $cpkH_s1[$testNum]   = round(($USL[$testNum]-$mean_s1[$testNum])/(3*$stdDev_s1[$testNum]),2);
    //             }
    //             else{
    //                 $cp_s1[$testNum]     = 999999;
    //                 $cpL_s1[$testNum]     = 999999;
    //                 $cpH_s1[$testNum]     = 999999;
                    
    //             }


    //             if($stdDev_s1[$testNum]!=0){
                   
    //             }   

    //             if($stdDev_s1[$testNum]==0){
    //                 // echo 'CPK: #DIV'.'<pre><pre/>';
    //                 $cpk_s1[$testNum] = 999999;

    //             }
    //             else if($cpkL_s1[$testNum] > $cpkH_s1[$testNum]){
    //                 // echo 'CPK: '.$cpkH[$testNum].'H'.'<pre><pre/>';
    //                 $cpk_s1[$testNum] = $cpkH_s1[$testNum].'H';
    //             }
    //             else if($cpkH_s1[$testNum] > $cpkL_s1[$testNum]){
    //                 // echo 'CPK: '.$cpkL[$testNum].'L'.'<pre><pre/>';
    //                 $cpk_s1[$testNum] = $cpkL_s1[$testNum].'L';
    //             }
    //             else{
    //                 $cpk_s1[$testNum] = $cpkH_s1[$testNum].'H';
    //             }

    //             //Site 2 Computations
    //             $mean_s2[$testNum]   = round(array_sum($testReadings_s2)/count($testReadings_s2),4);
    //             $stdDev_s2[$testNum] = round($this->getStdDev($testReadings_s2),4);
    //             if($stdDev_s2[$testNum]!=0){
    //                 $cp_s2[$testNum]     = round(($USL[$testNum]-$LSL[$testNum])/$stdDev_s2[$testNum],2);                
    //             }
    //             else{
    //                 $cp_s2[$testNum]     = 999999;
    //             }

    //             if($stdDev_s2[$testNum]!=0){
    //                 $cpkL_s2[$testNum]   = round(($mean_s2[$testNum]-$LSL[$testNum])/(3*$stdDev_s2[$testNum]),2);
    //                 $cpkH_s2[$testNum]   = round(($USL[$testNum]-$mean_s2[$testNum])/(3*$stdDev_s2[$testNum]),2);
    //             }   

    //             if($stdDev_s2[$testNum]==0){
    //                 // echo 'CPK: #DIV'.'<pre><pre/>';
    //                 $cpk_s2[$testNum] = 999999;

    //             }
    //             else if($cpkL_s2[$testNum] > $cpkH_s2[$testNum]){
    //                 // echo 'CPK: '.$cpkH[$testNum].'H'.'<pre><pre/>';
    //                 $cpk_s2[$testNum] = $cpkH_s2[$testNum].'H';
    //             }
    //             else if($cpkH_s2[$testNum] > $cpkL_s2[$testNum]){
    //                 // echo 'CPK: '.$cpkL[$testNum].'L'.'<pre><pre/>';
    //                 $cpk_s2[$testNum] = $cpkL_s2[$testNum].'L';
    //             }
    //             else{
    //                 $cpk_s2[$testNum] = $cpkH_s2[$testNum].'H';
    //             }

    //         $rowValues[$testNum] = array(
    //                 'testName'  => $testName[$testNum],
    //                 'LSL'       => $LSL[$testNum],
    //                 'USL'       => $USL[$testNum],
    //                 'meanS1'    => $mean_s1[$testNum],
    //                 'meanS2'    => $mean_s2[$testNum],
    //                 'stdDevS1'  => $stdDev_s1[$testNum],
    //                 'stdDevS2'  => $stdDev_s2[$testNum],
    //                 'cpS1'      => $cp_s1[$testNum],
    //                 'cpS2'      => $cp_s2[$testNum],
    //                 'cpkS1'     => $cpk_s1[$testNum],
    //                 'cpkS2'     => $cpk_s2[$testNum],
                    
    //             );
    //         }
    //         $data['rowValues'] = $rowValues;
    //         // $data['yield_s1']     = round(count($testReadings_s1)/(count($csvData)-1),4);

    //         // Load the list page view
    //         $this->load->view('dual_site_view', $data);
    //     }

    // }

